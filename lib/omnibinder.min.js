angular.module("OmniBinder",[]).factory("obBinder",["$timeout","$q","$parse","$window","obSyncEvents","obBinderTypes","obModelWriter","obObserver",function(a,b,c,d,e,f,g,h){function i(a,b,c,d){if(d=d||{},!c)throw new Error("protocol is required");if(!a)throw new Error("scope is required");if(!b)throw new Error("model is required");if(d.key&&"string"!=typeof d.key)throw new Error("key must be a string");this.protocol=c,this.scope=a,this.model=b,this.query=d.query,this.type=d.type,this.key=d.key,this.bindModel(this.type,a,b),this.protocol.subscribe(this),this.ignoreNModelChanges=0,this.ignoreNProtocolChanges=0}return i.prototype.bindModel=function(a,b,c){switch(a){case f.COLLECTION:this.observer=h.observeCollection(this,b[c],this.onModelChange)}},i.prototype.onModelChange=function(a){for(var b=0,c={changes:a},d=0;d<a.length;d++)b+=a.name&&1||a[d].addedCount+(a[d].removed&&a[d].removed.length)||0;return c.changes.length?this.ignoreNModelChanges?this.ignoreNModelChanges-=b:(this.protocol.processChanges(this,c),void 0):void 0},i.prototype.onProtocolChange=function(a){if(delta={changes:a},a.length)if(this.ignoreNProtocolChanges){newChanges=[];for(var b=0;b<a.length;b++)a[b].force&&newChanges.push(a[b]),this.ignoreNProtocolChanges--;if(!newChanges.length)return;delta.changes=newChanges,g.processChanges(this,delta)}else g.processChanges(this,delta)},i.prototype.val=function(){var a=c(this.model);return a(this.scope)},function(){var a=Object.create(i.prototype);return i.apply(a,arguments),a}}]),angular.module("OmniBinder").factory("obBinderTypes",[function(){return{COLLECTION:"collection",OBJECT:"object",BOOLEAN:"boolean",STRING:"string",NUMBER:"number",BINARY:"binary",BINARY_STREAM:"binaryStream"}}]),function(){var a=function(){};a.prototype.addChange=function(a){if(!a.type)throw new Error("Change must contain a type");this.changes.push(a)},a.prototype.updateObject=function(a){this.object=a,angular.forEach(this.changes,function(b,c,d){d[c].object=a})},angular.module("OmniBinder").factory("obDelta",function(){return function(b){var c=Object.create(a.prototype);return a.call(c),c.changes=[],b&&c.addChange(b),c}})}(),angular.module("OmniBinder").service("obModelWriter",["$parse","obBinderTypes","obSyncEvents",function(a,b){this.applyArrayChange=function(b,c){var d=a(b.model)(b.scope);if(c.added){var e=c.added.shift();for(d.splice(c.index,c.removed?c.removed.length:0,e);next=c.added.shift();)c.index++,d.splice(c.index,0,next)}else d.splice(c.index,c.removed?c.removed.length:0);b.ignoreNModelChanges+=(c.removed&&c.removed.length||0)+c.addedCount,a(b.model).assign(b.scope,d),b.scope.$$phase||b.scope.$apply()},this.applyObjectChange=function(a,b){function c(b,c){var d,e=a.scope[a.model];return angular.forEach(e,function(a){d||(a[b]===c?d=a:"undefined"==typeof a[b]&&(d=a))}),d}if(a.key){var d=c(a.key,b.object[a.key]);if(!d)throw new Error("Could not find object with key"+b.object[a.key]);switch(b.type){case"update":d[b.name]!==b.object[b.name]&&a.ignoreNModelChanges++,d[b.name]=b.object[b.name];break;case"delete":a.ignoreNModelChanges++,delete d[b.name];break;case"new":d[b.name]!==b.object[b.name]&&a.ignoreNModelChanges++,d[b.name]=b.object[b.name]}a.scope.$$phase||a.scope.$apply()}},this.processChanges=function(a,c){angular.forEach(c.changes,function(c){switch(a.type){case b.COLLECTION:"number"==typeof c.index?this.applyArrayChange(a,c):"string"==typeof c.name&&this.applyObjectChange(a,c)}},this)}}]),angular.module("OmniBinder").factory("obArrayChange",function(){return function(a,b,c){return{addedCount:a,removed:b,index:c}}}).factory("obOldObject",function(){return function(a){var b=angular.copy(a.object);return b[a.name]=a.oldValue,b}}).service("obObserver",["obArrayChange","obOldObject",function(a,b){this.observeObjectInCollection=function(c,d,e,f){function g(e){function g(c){var e=b(c),f=d.indexOf(c.object),c=a(1,[e],f);h.push(c)}var h=[];c.key?f.call(c,e):(angular.forEach(e,g),f.call(c,h))}this.observers[e]=g,Object.observe(e,g)},this.observers={},this.observeCollection=function(a,b,c){function d(d){h.observeObjectInCollection(a,b,d,c)}function e(b){angular.forEach(b,f),c.call(a,b)}function f(a){for(var c=a.index,e=a.addedCount+a.index;e>c;)d(b[c]),c++;a.removed.length&&angular.forEach(a.removed,function(a){Object.unobserve(a,h.observers[a])})}var g,h=this;return angular.forEach(b,d),g=new ArrayObserver(b,e)}}]),angular.module("OmniBinder").value("obSyncEvents",{NEW:"new",UPDATED:"update",DELETED:"deleted",RECONFIGURED:"reconfigured",READ:"read",MOVE:"move",NONE:"none",INIT:"init",UNKNOWN:"unknown"});