// AngularFire is an officially supported AngularJS binding for Firebase.
// The bindings let you associate a Firebase URL with a model (or set of
// models), and they will be transparently kept in sync across all clients
// currently using your app. The 2-way data binding offered by AngularJS works
// as normal, except that the changes are also sent to all other clients
// instead of just a server.
//
//      AngularFire 0.3
//      http://angularfire.com
//      License: MIT
"use strict";angular.module("firebase",[]).value("Firebase",Firebase);angular.module("firebase").factory("angularFire",["$q","$parse","$timeout",function($q,$parse,$timeout){return function(ref,scope,name,type){var af=new AngularFire($q,$parse,$timeout,ref);return af.associate(scope,name,type)}}]);function AngularFire($q,$parse,$timeout,ref){this._q=$q;this._parse=$parse;this._timeout=$timeout;this._initial=true;this._remoteValue=false;if(typeof ref=="string"){this._fRef=new Firebase(ref)}else{this._fRef=ref}}AngularFire.prototype={associate:function($scope,name,type){var self=this;if(type==undefined){type=[]}var deferred=this._q.defer();var promise=deferred.promise;this._fRef.on("value",function(snap){var resolve=false;if(deferred){resolve=deferred;deferred=false}self._remoteValue=type;if(snap&&snap.val()!=undefined){var val=snap.val();if(typeof val!=typeof type){self._log("Error: type mismatch");return}var check=Object.prototype.toString;if(check.call(type)!=check.call(val)){self._log("Error: type mismatch");return}self._remoteValue=angular.copy(val);if(angular.equals(val,self._parse(name)($scope))){return}}self._timeout(function(){self._resolve($scope,name,resolve,self._remoteValue)})});return promise},disassociate:function(){var self=this;if(self._unregister){self._unregister()}this._fRef.off("value")},_resolve:function($scope,name,deferred,val){var self=this;this._parse(name).assign($scope,angular.copy(val));this._remoteValue=angular.copy(val);if(deferred){deferred.resolve(function(){self.disassociate()});this._watch($scope,name)}},_watch:function($scope,name){var self=this;self._unregister=$scope.$watch(name,function(){if(self._initial){self._initial=false;return}var val=JSON.parse(angular.toJson(self._parse(name)($scope)));if(angular.equals(val,self._remoteValue)){return}self._fRef.ref().set(val)},true);$scope.$on("$destroy",function(){self.disassociate()})},_log:function(msg){if(console&&console.log){console.log(msg)}}};angular.module("firebase").factory("angularFireCollection",["$timeout",function($timeout){return function(collectionUrlOrRef,initialCb){function angularFireItem(ref,index){this.$ref=ref.ref();this.$id=ref.name();this.$index=index;angular.extend(this,{priority:ref.getPriority()},ref.val())}var indexes={};var collection=[];var collectionRef;if(typeof collectionUrlOrRef=="string"){collectionRef=new Firebase(collectionUrlOrRef)}else{collectionRef=collectionUrlOrRef}function getIndex(prevId){return prevId?indexes[prevId]+1:0}function addChild(index,item){indexes[item.$id]=index;collection.splice(index,0,item)}function removeChild(id){var index=indexes[id];collection.splice(index,1);indexes[id]=undefined}function updateChild(index,item){collection[index]=item}function moveChild(from,to,item){collection.splice(from,1);collection.splice(to,0,item);updateIndexes(from,to)}function updateIndexes(from,to){var length=collection.length;to=to||length;if(to>length){to=length}for(var index=from;index<to;index++){var item=collection[index];item.$index=indexes[item.$id]=index}}if(initialCb&&typeof initialCb=="function"){collectionRef.once("value",initialCb)}collectionRef.on("child_added",function(data,prevId){$timeout(function(){var index=getIndex(prevId);addChild(index,new angularFireItem(data,index));updateIndexes(index)})});collectionRef.on("child_removed",function(data){$timeout(function(){var id=data.name();var pos=indexes[id];removeChild(id);updateIndexes(pos)})});collectionRef.on("child_changed",function(data,prevId){$timeout(function(){var index=indexes[data.name()];var newIndex=getIndex(prevId);var item=new angularFireItem(data,index);updateChild(index,item);if(newIndex!==index){moveChild(index,newIndex,item)}})});collectionRef.on("child_moved",function(ref,prevId){$timeout(function(){var oldIndex=indexes[ref.name()];var newIndex=getIndex(prevId);var item=collection[oldIndex];moveChild(oldIndex,newIndex,item)})});collection.getByName=function(name){return collection[indexes[name]]};collection.add=function(item,cb){var ref;if(!cb){ref=collectionRef.ref().push(item)}else{ref=collectionRef.ref().push(item,cb)}return ref};collection.remove=function(itemOrId,cb){var item=angular.isString(itemOrId)?collection[indexes[itemOrId]]:itemOrId;if(!cb){item.$ref.remove()}else{item.$ref.remove(cb)}};collection.update=function(itemOrId,cb){var item=angular.isString(itemOrId)?collection[indexes[itemOrId]]:itemOrId;var copy={};angular.forEach(item,function(value,key){if(key.indexOf("$")!==0){copy[key]=value}});if(!cb){item.$ref.set(copy)}else{item.$ref.set(copy,cb)}};return collection}}]);angular.module("firebase").factory("angularFireAuth",["$rootScope","$parse","$timeout","$location","$route","$q",function($rootScope,$parse,$timeout,$location,$route,$q){function deconstructJWT(token){var segments=token.split(".");if(!segments instanceof Array||segments.length!==3){throw new Error("Invalid JWT")}var claims=segments[1];return JSON.parse(decodeURIComponent(escape(window.atob(claims))))}function updateExpression(scope,name,val,cb){if(name){$timeout(function(){$parse(name).assign(scope,val);cb()})}}function authRequiredRedirect(route,path,self){if(route.authRequired&&!self._authenticated){if(route.pathTo===undefined){self._redirectTo=$location.path()}else{self._redirectTo=route.pathTo===path?"/":route.pathTo}$location.replace();$location.path(path)}}return{initialize:function(url,options){var self=this;options=options||{};this._scope=$rootScope;if(options.scope){this._scope=options.scope}if(options.name){this._name=options.name}this._cb=function(){};if(options.callback&&typeof options.callback==="function"){this._cb=options.callback}this._redirectTo=null;this._authenticated=false;if(options.path){if($route.current){authRequiredRedirect($route.current,options.path,self)}$rootScope.$on("$routeChangeStart",function(e,next){authRequiredRedirect(next,options.path,self)})}this._ref=new Firebase(url);if(options.simple&&options.simple===false){updateExpression(this._scope,this._name,null);return}if(!window.FirebaseSimpleLogin){var err=new Error("FirebaseSimpleLogin undefined, "+"did you include firebase-simple-login.js?");$rootScope.$broadcast("angularFireAuth:error",err);return}var client=new FirebaseSimpleLogin(this._ref,function(err,user){self._cb(err,user);if(err){$rootScope.$broadcast("angularFireAuth:error",err)}else if(user){self._loggedIn(user)}else{self._loggedOut()}});this._authClient=client},login:function(tokenOrProvider,options){var promise=this._watchForLogin();switch(tokenOrProvider){case"github":case"persona":case"twitter":case"facebook":case"password":if(!this._authClient){var err=new Error("Simple Login not initialized");$rootScope.$broadcast("angularFireAuth:error",err)}else{this._authClient.login(tokenOrProvider,options)}break;default:var claims,self=this;try{claims=deconstructJWT(tokenOrProvider);this._ref.auth(tokenOrProvider,function(err){if(err){$rootScope.$broadcast("angularFireAuth:error",err)}else{self._loggedIn(claims)}})}catch(e){$rootScope.$broadcast("angularFireAuth:error",e)}}return promise},logout:function(){if(this._authClient){this._authClient.logout()}else{this._ref.unauth();this._loggedOut()}},_loggedIn:function(user){var self=this;this._authenticated=true;updateExpression(this._scope,this._name,user,function(){$rootScope.$broadcast("angularFireAuth:login",user);if(self._redirectTo){$location.replace();$location.path(self._redirectTo);self._redirectTo=null}})},_loggedOut:function(){this._authenticated=false;updateExpression(this._scope,this._name,null,function(){$rootScope.$broadcast("angularFireAuth:logout")})},_watchForLogin:function(){var subs=[],def=$q.defer();function done(err,user){$timeout(function(){if(err){def.reject(err)}else{def.resolve(user)}});for(var i=0;i<subs.length;i++){subs[i]()}}subs.push($rootScope.$on("angularFireAuth:login",function(evt,user){done(null,user)}));subs.push($rootScope.$on("angularFireAuth:error",function(evt,err){done(err,null)}));return def.promise}}}]);